stages:
  - build
  - deploy
  - code-quality

variables:
  CONTAINER_IMAGE: ${CI_REGISTRY}/${CI_PROJECT_PATH}

test:
  stage: build
  image: golang:1.11
  script:
    - go get -u github.com/jstemmer/go-junit-report
    - go test -mod vendor ./... -v 2>&1 | go-junit-report > report.xml
  artifacts:
    reports:
      junit: report.xml
  cache:
    paths:
      - /go/src/

build:
  stage: build
  image: golang:1.11
  artifacts:
    paths:
      - octaaf
    expire_in: 1 week
  script:
    - go build -mod vendor -ldflags "-s -w -X main.Version=${CI_COMMIT_TAG}" -o octaaf

code-quality:
  stage: code-quality
  image: docker:stable
  allow_failure: true
  services:
    - docker:stable-dind
  variables:
    DOCKER_DRIVER: overlay2
  script:
    - export SP_VERSION=$(echo "$CI_SERVER_VERSION" | sed 's/^\([0-9]*\)\.\([0-9]*\).*/\1-\2-stable/')
    - docker run
      --env SOURCE_CODE="$PWD"
      --volume "$PWD":/code
      --volume /var/run/docker.sock:/var/run/docker.sock
      "registry.gitlab.com/gitlab-org/security-products/codequality:$SP_VERSION" /code
  artifacts:
    reports:
      codequality: gl-code-quality-report.json
  only:
    - merge_requests

deploy-unstable:
  stage: deploy
  image: docker:stable
  services:
    - docker:dind
  dependencies:
    - build
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker pull "${CONTAINER_IMAGE}:unstable-${CI_COMMIT_REF_NAME}" || true
    - docker build --cache-from "${CONTAINER_IMAGE}:unstable-${CI_COMMIT_REF_NAME}" --tag "${CONTAINER_IMAGE}:unstable-${CI_COMMIT_REF_NAME}" .
    - docker push "${CONTAINER_IMAGE}:unstable-${CI_COMMIT_REF_NAME}"

deploy-stable:
  stage: deploy
  image: docker:stable
  services:
    - docker:dind
  dependencies:
    - build
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker pull "${CONTAINER_IMAGE}:latest" || true
    - docker build --cache-from "${CONTAINER_IMAGE}:latest" --tag "${CONTAINER_IMAGE}:${CI_COMMIT_TAG}" --tag "${CONTAINER_IMAGE}:latest" .
    - docker push "${CONTAINER_IMAGE}:${CI_COMMIT_TAG}"
    - docker push "${CONTAINER_IMAGE}:latest"
  only:
    variables:
      - $CI_COMMIT_TAG =~ /^release-.*$/
